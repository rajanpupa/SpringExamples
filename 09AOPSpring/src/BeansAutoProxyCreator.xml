<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean id="customerService" class="general.CustomerService">
		<property name="name" value="rajn Upadhyay" />
		<property name="url" value="http://rajanpupa.blogspot.com" />
	</bean>

	<bean id="hijackAroundMethodBeanAdvice" class="general.aop.HijackAroundMethod" />
	
	<bean id="customerServiceProxy" 
                class="org.springframework.aop.framework.ProxyFactoryBean">

		<property name="target" ref="customerService" />

		<property name="interceptorNames">
			<list>
				<!-- add customer advisor instead of customer name  -->
				<value>customerAdvisor</value>
			</list>
		</property>
	</bean>
	
	<!-- Pointcut method of doing it -->
	<!-- <bean id="customerPointcut"
        class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="printName" />
	</bean> -->
	<!-- Default Pointcut advisor  -->
	<bean id="customerAdvisor"
		class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="patterns">
			<list>
				<value>.*URL.*</value>
			</list>
		</property>
		<property name="advice" ref="hijackAroundMethodBeanAdvice" />
	</bean>
	
	<!-- can also use other implementations of AutoProxyCreator like:
		. DefaultAdvisorAutoProxyCreator - see below
	  -->
	<!-- <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*customerService</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>customerAdvisor</value>
			</list>
		</property>
	</bean> -->

	<!-- No need to set advisor bean in its property  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
</beans>